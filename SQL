## Ejercicios de SQL
https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_all

## Ejercicio 1:
Todas las ventas realizadas por MargaretPeacock al cliente Frankenversand.La salida debe  contener  los  siguientes  campos: Nombre  y  Apellido  del  Vendedor,  Nombre  del Cliente,  ID  de  la  Orden  de  Compra  (tabla  Orders),  Nombre  del  Producto  (tabla Products), Presentación (Unit, de tabla Products), Cantidad (tabla OrderDetails), Precio (tabla Products) y Total (calculado como Precio*Cantidad).

SELECT e.LastName, e.Firstname, c.CustomerName, o.OrderID, p.ProductName, p.Unit, od.Quantity, p.Price, Price*Quantity as 'Total'
FROM orders o 
INNER JOIN Employees e ON e.EmployeeID= o.EmployeeID
INNER JOIN Customers c ON c.CustomerID= o.CustomerID
INNER JOIN OrderDetails od ON od.OrderID = o.OrderID  
INNER JOIN Products p ON p.ProductID = od.ProductID
WHERE FirstName = 'Margaret' and LastName = 'Peacock' and CustomerName = 'Frankenversand'



## ejercicio 2
SELECT ProductName as 'Nombre del Producto', Unit as 'Presentación', Price as 'Precio', 
CASE WHEN Price >75 THEN '12%' WHEN Price >50 THEN '8%' WHEN Price >= 30 THEN '4%' ELSE '0%' END AS 'Descuento',
Price-Price*(CASE WHEN Price >75 THEN 0.12 WHEN Price >50 THEN 0.08 WHEN Price >= 30 THEN 0.04 ELSE 0 END) AS 'Precio final'
FROM Products

##ejercicio 3
SELECT c.CategoryName as 'Nombre de Categoria', MAX(Price) as 'Precio Maximo', MIN(Price) as 'Precio Minimo'
FROM Products
INNER JOIN Categories c ON c.CategoryID= Products.CategoryID
GROUP BY Products.CategoryID 
ORDER BY 'Precio Maximo' Desc 

##Ejercicio 4
SELECT c.CustomerName as 'Nombre del Cliente', c.City as 'Ciudad', c.Country as 'Pais', o.OrderID, p.ProductName as 'Nombre del Producto', p.Unit as 'Presentacion', od.Quantity as 'Cantidad', p.Price as 'Precio', p.Price * od.Quantity as 'Total'
FROM Customers c
INNER JOIN Orders o ON o.CustomerID = c.CustomerID
INNER JOIN OrderDetails od ON od.OrderID = o.OrderID
INNER JOIN Products p ON p.ProductID= od.ProductID
WHERE c.Country = 'Spain'

#Ejercicio 5
SELECT p.ProductName, p.Unit, p.Price,
CASE WHEN Unit LIKE '%box%' THEN '7%' 
WHEN Unit LIKE '%pkg%' or Unit LIKE '%bottle%' THEN '5%' 
ELSE '2%' 
END as 'Recargo%',
Price * (CASE WHEN Unit LIKE '%box%' THEN 0.07 
WHEN Unit LIKE '%pkg%' or Unit LIKE '%bottle%' THEN 0.05 
ELSE 0.02 END) as 'Recargo$',
Price + Price * (CASE WHEN Unit LIKE '%box%' THEN 0.07 
WHEN Unit LIKE '%pkg%' or Unit LIKE '%bottle%' THEN 0.05 
ELSE 0.02 END) as 'Precio Final'
FROM Products p

## ejercicio 6
SELECT c.CustomerName as 'Nombre del cliente', COUNT(DISTINCT(o.OrderID)) as 'Cantidad O.C', SUM(p.Price * od.Quantity) as 'total Gastado por cliente'
FROM Customers c
INNER JOIN Orders o ON c.CustomerID = o.CustomerID
INNER JOIN OrderDetails od ON od.OrderID = o.OrderID
INNER JOIN Products p ON p.ProductID = od.ProductID
WHERE Country = 'USA'
GROUP BY o.CustomerID

## Ejercicio 7
SELECT e.FirstName || " " || e.LastName as 'Nombre Vendedor', COUNT(e.EmployeeID) as 'Cantidad de ventas', ROUND(SUM(od.Quantity * p.Price),2) as 'Total',
CASE WHEN SUM(od.Quantity * p.Price)>100000 THEN '20%' WHEN SUM(od.Quantity * p.Price)>40000 THEN '10%' WHEN SUM(od.Quantity * p.Price)>30000 THEN '5%' ELSE '0%' END as 'Comision'
FROM Orders o
INNER JOIN Employees e ON o.EmployeeID= e.EmployeeID
INNER JOIN OrderDetails od ON o.OrderID= od.OrderID
INNER JOIN Products p ON od.ProductID= p.ProductID
GROUP BY e.EmployeeID
ORDER BY COUNT(e.EmployeeID) DESC
